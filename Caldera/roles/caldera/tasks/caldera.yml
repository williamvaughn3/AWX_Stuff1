---

- name: Ensure caldera dependencies are present
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ caldera_pkg }}"
  register: pkg_result
  until: pkg_result is success

- name: ensure caldera user exists
  user:
    name: "{{ caldera_user }}"
    home: "{{ caldera_home }}"
    shell: /bin/bash

- name: Ensure recent pip & setuptools in virtualenv
  pip:
    name: "{{ item }}"
    state: present
    virtualenv: "{{ caldera_home }}/env-caldera"
    virtualenv_python: "{{ python }}"
  with_items:
    - pip
    - setuptools
  register: pkg_result
  until: pkg_result is success

- name: git clone caldera
  git:
    repo: https://github.com/mitre/caldera.git
    dest: "{{ caldera_rootdir }}"
    version: "{{ caldera_version }}"
    update: false
    recursive: true
  become: yes
  become_user: "{{ caldera_user }}"
  register: result

- name: Install caldera pip requirements
  pip:
    requirements: "{{ caldera_rootdir }}/requirements.txt"
    virtualenv: "{{ caldera_home }}/env-caldera"
    virtualenv_python: "{{ python }}"
  register: pkg_result
  until: pkg_result is success

- name: Identify other pip requirements
  find:
    paths: "{{ caldera_rootdir }}/plugins"
    patterns: 'requirements.txt'
    recurse: yes
  register: requirements

- name: Install other pip requirements
  pip:
    requirements: "{{ item.path }}"
    virtualenv: "{{ caldera_home }}/env-caldera"
    virtualenv_python: "{{ python }}"
  register: pkg_result
  until: pkg_result is success
  loop: "{{ requirements.files }}"

  #- name: add plugin to conf
  #  lineinfile:
  #    path: "{{ caldera_rootdir }}/conf/local.yml"
  #    insertafter: 'plugins:'
  #    line: "  - {{ item }}"
  #  with_items: "{{ plugins }}"
